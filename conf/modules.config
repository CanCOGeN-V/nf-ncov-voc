/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${params.prefix}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]


    // Wastewater


    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WW_FASTP {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_FASTP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-l 70 -x --cut_tail --cut_tail_mean_quality 20 --detect_adapter_for_pe'
    }

    withName: WASTEWATER:QUALITYCONTROL:WW_SEQKIT_STATS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SEQKIT_STATS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: MINIMAP2_ALIGN_HOST{
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/MINIMAP2_ALIGN_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-a -xsr'
        
    }

    withName: MINIMAP2_ALIGN_VIRAL{
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/MINIMAP2_ALIGN_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-a -xsr'
    }

    withName: WASTEWATER:WW_BWA_INDEX_HOST {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_BWA_INDEX_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WASTEWATER: WW_BWA_MEM_HOST {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_BWA_MEM_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WW_BWA_INDEX_VIRAL {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_BWA_INDEX_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WW_BWA_MEM_VIRAL {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_BWA_MEM_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: WW_SAMTOOLS_INDEX_HOST {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_INDEX_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: WW_SAMTOOLS_INDEX_VIRAL {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_INDEX_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: WW_SAMTOOLS_FLAGSTAT_HOST {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_FLAGSTAT_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WW_SAMTOOLS_FLAGSTAT_VIRAL {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_FLAGSTAT_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: WW_SAMTOOLS_VIEW {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_VIEW" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-f4 -b'
        ext.prefix = { "${meta.id}.unmapped" }
    }
    
    withName: WW_SAMTOOLS_FASTQ {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_FASTQ" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: articDownloadScheme {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/articDownloadScheme" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: WW_IVAR_TRIM {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_IVAR_TRIM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]   
        ext.prefix = { "${meta.id}.ivar" }
    }

    withName: WW_SAMTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/WW_SAMTOOLS_SORT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]   
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: FREYJA_UPDATE {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/FREYJA_UPDATE" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: FREYJA_VARIANTS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/FREYJA_VARIANTS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    
    withName: FREYJA_DEMIX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/FREYJA_DEMIX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: FREYJA_BOOT {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/FREYJA_BOOT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "--depthcutoff ${params.freyja_boot_depthcutoff}"
        errorStrategy = 'ignore'
    }

    
    // General

    withName: SNPEFF_BUILD {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SNPEFF_BUILD" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-genbank' 
         
    }

    withName: SAMTOOLS_FAIDX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_FAIDX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
       
    }

    withName: PANGOLIN {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/PANGOLIN" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
       
    }
    
    withName: MERGE_PANGOLIN_METADATA {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/MERGE_PANGOLIN_METADATA" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
       
    }

    withName: EXTRACTVARIANTS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/EXTRACTVARIANTS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
       
    }

    withName: extractMetadata {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/extractMetadata" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
       
    }

    withName: SEQKIT_GREP {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SEQKIT_GREP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "-n"
        ext.prefix = { "${pattern.getBaseName()}" }
        ext.suffix = { "fa" }
    }

    withName: BBMAP {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BBMAP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "maxns=${params.maxns} minlength=${params.minlength} addunderscore tossjunk overwrite=true -Xmx4g"
        
    }

    withName: COVIDMVP:QUALITYCONTROL:SEQKIT_STATS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SEQKIT_STATS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "--all"
        ext.prefix = { "combined_stats" }
    }

    withName: BWA_INDEX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BWA_INDEX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BWA_MEM {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BWA_MEM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: COVIDMVP:VARIANT_CALLING:MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/MINIMAP2_ALIGN" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-ax asm5'
    }

    withName: SAMTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_SORT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]   
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: SAMTOOLS_INDEX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_INDEX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }

    withName: SAMTOOLS_STATS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_STATS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    
    withName: SAMTOOLS_FLAGSTAT {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_FLAGSTAT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }
    
    withName: SAMTOOLS_IDXSTATS {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SAMTOOLS_IDXSTATS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ] 
    }

    withName: FREEBAYES{
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/FREEBAYES" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = ext.args = "-p ${params.ploidy} \
                    -F ${params.var_MinFreqThreshold} \
                    -C 1 \
                    --min-coverage ${params.var_MinDepth} \
                    --pooled-continuous"
        errorStrategy = 'ignore'
    }

    withName: BCFTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BCFTOOLS_SORT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.id}.sorted" }
    }

    withName: BCFTOOLS_INDEX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BCFTOOLS_INDEX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GUNZIP {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/GUNZIP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TABIX_BGZIPTABIX {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/TABIX_BGZIPTABIX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BCFTOOLS_NORM {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/BCFTOOLS_NORM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--output-type v -c w'   
    }

    withName: IVAR_VARIANTS_TO_VCF {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/IVAR_VARIANTS_TO_VCF" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    

    withName: SNPEFF_ANN {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/SNPEFF_ANN" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-formatEff -hgvs1LetterAa -hgvsOld' 
         
    }


    withName: TAGPROBLEMATICSITES_NCOV {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/TAGPROBLEMATICSITES_NCOV" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
         
    }

    withName: ANNOTATEMATPEPTIDES_NCOV {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/ANNOTATEMATPEPTIDES_NCOV" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
         
    }

    withName: VCFTOGVF {
        publishDir = [
            path: { "${params.outdir}/${params.prefix}/VCFTOGVF" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
         
    }

    
    

    

    

}
